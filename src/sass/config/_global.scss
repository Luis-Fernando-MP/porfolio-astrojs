@use '@sass/config/variables' as *;
@use '@sass/utils/defaults' as defs;
@use '@sass/utils/document';

*,
::before,
::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  outline: none;
}

body {
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  width: 100vw;
  height: 100vh;
  font-family: $fm1;
  color: $txt-1;
  background-color: $bg-1;
  @extend %scroll-hidden;
  font-size: $f-family-size;
  overflow: hidden auto;
  padding: $padding;
}

html {
  scroll-behavior: smooth;
}

$listOfFontsSize: (
  'h1': $f-h1,
  'h2': $f-h2,
  'h3': $f-h3,
  'h4': $f-h4,
  'p': $f-p,
  'span': $f-span,
  'small': $f-small,
  'smaller': $f-smaller
);

@each $tag, $value in $listOfFontsSize {
  #{$tag} {
    font-size: $value;
  }
}

h1,
h2,
h3 {
  color: $txt-1;
}

h1 {
  font-weight: 900;
}

h2 {
  font-weight: 800;
}

p,
span,
small,
input,
textarea {
  font-family: $fm3;
}

h4,
p,
a,
span,
small,
input,
textarea {
  color: $txt-2;
}

h4 {
  font-weight: 400;
}

span,
small {
  font-weight: 200;
}

h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

input,
textarea,
p {
  font-weight: 300;
  text-wrap: pretty;
}

textarea {
  resize: none;
  @extend %scroll-hidden;
}

ul {
  list-style: none;
}

a {
  text-decoration: none;
}

img,
svg {
  object-fit: contain;
  user-select: none;
  -webkit-user-drag: none;
}

button {
  border: none;
  background-color: transparent;
  cursor: pointer;
}

input,
textarea {
  background: none;
  border: none;
}

.icon {
  cursor: pointer;
  padding: $icon;
  img {
    width: $icon;
    height: $icon;
  }
}

.pIcon {
  width: $icon;
  height: $icon;
}

.btn {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: $padding;
  padding: $padding * 0.5 $padding;
  border-radius: $radius;
  div {
    padding: 0;
  }
  @include defs.hover;
}

.dg {
  color: $colorGr;
}

.sub-title {
  font-size: $f-h1;
}

$listSecondColors: (
  'error': $bg-error,
  'check': $bg-check,
  'bg1': $colorGr
);

@each $tag, $value in $listSecondColors {
  .#{$tag} {
    background-color: rgba($value, 0.2) !important;
    p {
      color: $txt-1;
    }
    &.active {
      outline: 2px solid $value;
    }
  }
}
